/**
 * \file UKBankingHolidayCalendarTest.cpp
 * \brief UKBankingHolidayCalendar       unit test source file
 *
 */




/*
 * This file is part of OndALear  collection of open source components.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty.  In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Copyright (C) 2008 Amnon Janiv <amnon.janiv@ondalear.com>
 *
 * Initial version: 2011-11-11
 * Author: Amnon Janiv <amnon.janiv@ondalear.com>
 */

/*
 * $Id:  $
 */
#include "UKBankingHolidayCalendarTest.hpp"

#include "datetime/Stream.hpp"



namespace ondalear {
namespace test {
namespace calendar {


 
//public member functions
UKBankingHolidayCalendarTest::UKBankingHolidayCalendarTest()
	:
	HolidayCalendarTest("uk_banking_calendar_test_data.xml")
{
	loadCalendarData(getCalendarDataGrammarFileName(), 
		"../../../xml/calendar/uk_banking_holiday_calendar_specs.xml");
}



void
UKBankingHolidayCalendarTest::test_2002()
{
	UKBankingHolidayCalendar cal;
	cal.configure();
	//spring bank holiday moved to June 4 in 2002
	CPPUNIT_ASSERT(true == cal.isBusinessDay(Date(20020527)));
	CPPUNIT_ASSERT(false == cal.isBusinessDay(Date(20020603)));
	CPPUNIT_ASSERT(false == cal.isBusinessDay(Date(20020604)));
}

void
UKBankingHolidayCalendarTest::test_2010()
{

	UKBankingHolidayCalendar cal;
	 

	//Load the rules
	cal.configure();

	//Compare data generated by the rules to test data loaded from xml test data file
	runCalendaTest(cal, Year(2010));

	
}

void
UKBankingHolidayCalendarTest::test_2011()
{
	 
	UKBankingHolidayCalendar cal;
	 

	//Load the rules
	cal.configure();

	//Compare data generated by the rules to test data loaded from xml test data file
	runCalendaTest(cal, Year(2011));


}

void
UKBankingHolidayCalendarTest::test_2012()
{
	
	UKBankingHolidayCalendar cal;
	 

	//Load the rules
	cal.configure();

	//Compare data generated by the rules to test data loaded from xml test data file
	runCalendaTest(cal, Year(2012));
	 

}

void
UKBankingHolidayCalendarTest::test_2002_data_driven()
{
	 
	BusinessCalendarSharedPtr busCal = getBusinessCalendar ("UK Banking Holiday Calendar");
		 
	//spring bank holiday moved to June 4 in 2002
	CPPUNIT_ASSERT(true == busCal->isBusinessDay(Date(20020527)));
	CPPUNIT_ASSERT(false == busCal->isBusinessDay(Date(20020603)));
	CPPUNIT_ASSERT(false == busCal->isBusinessDay(Date(20020604)));
}

void 
UKBankingHolidayCalendarTest::test_2010_data_driven()
{

	BusinessCalendarSharedPtr busCal =
		getBusinessCalendar ("UK Banking Holiday Calendar");

	runCalendaTest(*busCal, Year(2010));
}

void
UKBankingHolidayCalendarTest::test_2011_data_driven()
{
	BusinessCalendarSharedPtr busCal =
		getBusinessCalendar ("UK Banking Holiday Calendar");

	runCalendaTest(*busCal, Year(2011));
}

void
UKBankingHolidayCalendarTest::test_2012_data_driven()
{
	BusinessCalendarSharedPtr busCal =
		getBusinessCalendar ("UK Banking Holiday Calendar");

	runCalendaTest(*busCal, Year(2012));
}


} //namespace calendar
} //namespace test
} //namespace ondalear

